<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ctp</groupId>
  <artifactId>arquillian-demo-01</artifactId>
  <version>1.0-SNAPSHOT</version>
  <description>This project is an example used for blog post.</description>
  
  
  <repositories>
        <repository>
            <id>repo2</id>
            <name>Maven2 repository 2</name>
            <url>http://repo2.maven.org/maven2</url>
        </repository>
        <repository>
            <id>java.net2</id>
            <name>Repository hosting the jee6 artifacts</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
        <repository>
            <id>glassfish-repository</id>
            <name>Java.net Repository for Glassfish</name>
            <url>http://download.java.net/maven/glassfish</url>
        </repository>
        <repository>
            <id>repository.jboss.org</id>
            <name>JBoss Maven Repository</name>
            <url>http://repository.jboss.org/maven2</url>
        </repository>
        <repository>
            <id>nexus.jboss.org</id>
            <name>JBoss Nexus Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>fest</id>
            <name>FEST testing utilities</name>
            <url>http://repository.codehaus.org/</url>
        </repository>
    </repositories>
    
  
    <pluginRepositories>
        <pluginRepository>
            <id>annotation-processing-repository</id>
            <name>Annotation Processing Repository</name>
            <url>http://maven-annotation-plugin.googlecode.com/svn/trunk/mavenrepo</url>
        </pluginRepository>
        <pluginRepository>
            <id>jfrog-repository</id>
            <name>JFrog Releases Repository</name>
            <url>http://repo.jfrog.org/artifactory/plugins-releases</url>
        </pluginRepository>
    </pluginRepositories>
    
    <dependencies>

        <dependency>
            <groupId>javax.validation</groupId> 
            <artifactId>validation-api</artifactId> 
            <version>1.0.0.GA</version>
            <scope>provided</scope> 
        </dependency>

        <dependency>
            <groupId>org.glassfish.extras</groupId>
            <artifactId>glassfish-embedded-all</artifactId>
            <version>${glassfish.version}</version>
            <scope>provided</scope>
        </dependency>

        
        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-junit</artifactId>
            <version>${arquillian.version}</version>
            <scope>test</scope>
        </dependency>       
        
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-glassfish-embedded-30</artifactId>
            <version>${arquillian.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.easytesting</groupId> 
            <artifactId>fest-assert</artifactId> 
            <version>${fest.assert.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- UTILITY DEPENDENCIES -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <!-- 
                        Already provided by glassfish embedded. 
                        If included causing exception while starting
                        embbeded glassfish container -  
                        Caused by: java.lang.IncompatibleClassChangeError: 
                        javax.persistence.Persistence and javax.persistence.
                        Persistence$PersistenceUtilImpl disagree on InnerClasses attribute
                     -->
                    <groupId>org.hibernate.javax.persistence</groupId>
                    <artifactId>hibernate-jpa-2.0-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-proc:none</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>process</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/metamodel</outputDirectory>
                            <processors>
                                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
                            </processors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/metamodel</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>arquillian-demo-01</finalName>
    </build>

    <profiles>
        <profile>
            <id>endorsed</id>
            <activation>
                <property>
                    <name>sun.boot.class.path</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- javaee6 contains upgrades of APIs contained within the JDK itself.
                                 As such these need to be placed on the bootclasspath, rather than classpath of the
                                 compiler.
                                 If you don't make use of these new updated API, you can delete the profile.
                                 On non-SUN jdk, you will need to create a similar profile for your jdk, with the similar property as sun.boot.class.path in Sun's JDK.-->
                            <compilerArguments>
                                <bootclasspath>${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path}</bootclasspath>
                            </compilerArguments>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>javax</groupId>
                                <artifactId>javaee-endorsed-api</artifactId>
                                <version>6.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <properties>
        <junit.version>4.8.1</junit.version>
        <arquillian.version>1.0.0.Alpha2</arquillian.version>
        <glassfish.version>3.0.1</glassfish.version>
        <fest.assert.version>1.2</fest.assert.version>
        <hsqldb.version>1.8.0.7</hsqldb.version>
        <dbunit.version>2.4.7</dbunit.version>
    </properties>
    
</project>
